This directory contains the implementation of the chord protocol.

In addition, there are two utilities: chord_getfingers, and
chord_traceroute. 

Before running these utilities see the "Defending against DoS attacks"
at the end of this README.

Note that none of these utilities run behind NATs or firewalls.

1) chord_getfingers

Syntax: chord_getfingers [-all] <node_IP_addr> <port>

chord_getfingers is invoked by specifying a chord node's IP address
and port number. This command returns the Chord ID and all the fingers
of that node. For each finger, this command returns the finger ID, the
finger's IP address and its port number, the mean round-trip-time and
the round-trip-time's standard deviation from the node to the finger.

If '-all' option is used, this command returns the information about
all nodes in the system, by hoping from successor to successor around
the ring, starting from the contacted node.

NOTE: When using the option '-all', chord_getfingers exits when a
node cannot reach its successor is unreachable.

2) chord_traceroute 

Syntax: chord_traceroute <id> <node_IP_addr> <port>

chord_traceroute is invoked by specifying a chord node's IP address
and its port number, and a Chord ID, x.  Let n be the chord node at
which chord_traceroute is invoked. The command returns then the Chord
route from node x to the Chord node responsible for ID x.

Defending against DoS attacks
-----------------------------

To defend against malicious use, we use a very simple form of access
control list. In the directory where Chord is ran (when using, i3,
this directory is the i3serverd directory where i3serverd directory is
ran) there should by a file called acclist.txt. This file contains on
each line a 20-byte key.

Similarly, the directory from where chord_getfingers and
chord_traceroute are ran should contain a file key.txt. This file
contains only one 20-byte key.

A client is authorized to execute a command only if the key in its
key.txt matches one of the keys in the chord server's acclist.txt
 
